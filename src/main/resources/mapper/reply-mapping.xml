<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blue.mapper.ReplyMapper">
	<!-- 프로필 이미지, 댓글 작성자, 댓글 내용, 좋아요 수, 댓글 작성일 -->
	<!-- 댓글 전체 리스트(게시글 상세보기 모달창 사용) -->
	<!-- 1. 좋아요 수, 2. 작성순 으로 정렬 -->
	<select id="listReply" resultType="reply">
		<![CDATA[
			SELECT *
		  	FROM reply 
		  	LEFT OUTER JOIN (SELECT reply_seq, count(*) reply_Like_Count
		                     FROM likes
		                     GROUP BY reply_seq) as ff
		  	USING (reply_seq)
		  	WHERE reply.post_seq = #{post_Seq}
		  	ORDER BY ff.reply_Like_Count DESC NULLS LAST, reply.reply_Seq DESC
		]]>
	</select>
	
	<!-- 댓글 좋아요 여부 확인 -->
	<select id = "checkReplyLike" resultType = "String">
		SELECT member_Id
		FROM likes
		WHERE member_Id = #{member_Id}
		  AND post_Seq = #{post_Seq}
		  AND reply_Seq = #{reply_Seq}
	</select>
	
	<!-- 댓글 리스트 3개만 -->
	<select id="replyPreview" resultType="reply">
		 <![CDATA[	  
		 	SELECT *
		 	FROM (SELECT *
		 		  FROM reply	    
				  LEFT OUTER JOIN (SELECT reply_Seq, count(*) reply_Like_Count
						    	   FROM likes
								   WHERE reply_Seq != 0
								   GROUP BY reply_Seq) as ff
				  USING (reply_Seq)
				  WHERE reply.post_Seq = #{post_Seq}
				  ORDER BY ff.reply_Like_Count DESC NULLS LAST, reply.reply_Seq DESC)
			LIMIT 3
	    ]]>
	</select>
	
	<!-- 댓글 좋아요 추가 -->
	<insert id = "addReplyLike">
		INSERT INTO likes(member_id, post_seq, reply_seq)
		VALUES(#{member_Id}, #{post_Seq}, #{reply_Seq})
	</insert>
	
	<!-- 댓글 좋아요 취소 -->
	<delete id = "delReplyLike">
		DELETE FROM likes
		WHERE member_Id = #{member_Id}
		  AND post_Seq = #{post_Seq}
		  AND reply_Seq = #{reply_Seq}
	</delete>
	
	<!-- 게시글 댓글 카운트 -->
	<select id="postReplyCount" resultType = "int">
		SELECT count(*)
		FROM reply
		WHERE post_seq = #{post_Seq}
	</select>
	
	<!-- 댓글 인서트 -->
	<insert id="insertReply">
		INSERT INTO reply(reply_Seq, post_Seq, member_Id, reply_Content) 
		VALUES(#{reply_Seq}, #{post_Seq}, #{member_Id}, #{reply_Content})
	</insert>
	
	<!-- 알람용 reply 작성자 -->
	<select id = "replyWriter" resultType = "String">
		SELECT member_Id
		FROM reply
		WHERE reply_Seq = #{reply_Seq}
	</select>
	
	<!-- 현재 가장 큰 reply_Seq 추출 -->
	<select id = "getMaxReply_Seq" resultType = "int">
		SELECT COALESCE(MAX(reply_Seq), 1)
		FROM reply
	</select>
	
	<!-- 댓글 삭제 처리 -->
	<delete id="deleteReply">
		DELETE FROM reply 
		WHERE post_seq = #{post_Seq}
		  AND reply_seq = #{reply_Seq} 
	</delete>
	
	<!-- 알람 인서트 시 시퀀스 0 댓글 존재 여부 -->
	<select id = "checkZeroReplySeq" resultType = "String">
		SELECT member_Id
		FROM reply
		WHERE reply_seq = '0'
	</select>

	<!-- 댓글 수정 요청시 댓글 내용을 수정창에 띄우기 위한 조회문 -->
	<select id = "replyContent" resultType = "String">
		SELECT reply_Content
		FROM reply
		WHERE post_Seq = #{post_Seq}
		AND   reply_Seq = #{reply_Seq}
	</select>

	<!-- 댓글 수정 처리 -->
	<update id="updateReply">
		update reply
		set   reply_Content = #{reply_Content}
		where post_Seq = #{post_Seq}
		and   reply_Seq = #{reply_Seq}
	</update>
</mapper>
